{"version":3,"sources":["faTypescript.js","App.js","serviceWorker.js","index.js"],"names":["Object","defineProperty","exports","value","ligatures","svgPathData","definition","prefix","iconName","icon","faTypescript","width","height","unicode","Nav","props","React","useState","isToggled","setIsToggled","toggleNav","className","id","href","onClick","type","selected","handleDefault","handlePro","handleRetro","aria-expanded","aria-label","About","colours","faJsSquare","faReact","faPython","faBootstrap","faCss3","faCodepen","faGit","faHtml5","faMarkdown","faTrello","faGitter","ProjectDeck","img","title","ProjectCard","isHovered","setIsHovered","onMouseEnter","onMouseLeave","src","alt","Contact","faGithub","faFreeCodeCamp","faLinkedin","faFacebook","App","setColours","setSelected","Canvas","loaded","min","max","canvas","document","getElementById","ctx","getContext","window","innerWidth","innerHeight","particles","randomColour","Math","floor","random","length","clearRect","onresize","i","push","Particle","PI","render","fillStyle","fillRect","p","update","save","beginPath","arc","position","x","y","radius","shadowColor","colour","shadowBlur","shadowOffsetX","shadowOffsetY","globalAlpha","fill","restore","draw","requestAnimationFrame","useEffect","Vector2D","this","v","sqrt","scalar","angle","cos","sin","direction","velocity","setFromScalarAngle","range","add","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.adf75f9b.chunk.js","sourcesContent":["'use strict';\r\nObject.defineProperty(exports, '__esModule', { value: true });\r\nvar prefix = 'fab';\r\nvar iconName = 'typescript';\r\nvar width = 64;\r\nvar height = 64;\r\nvar ligatures = [];\r\nvar unicode = 'f836';\r\nvar svgPathData = 'M0 32v32h64.002V-.002H0zm51.577-2.55c1.625.406 2.865 1.128 4.003 2.306.59.63 1.463 1.778 1.534 2.052.02.08-2.763 1.95-4.45 2.997-.06.04-.305-.223-.58-.63-.823-1.2-1.686-1.717-3.007-1.808-1.94-.132-3.2.884-3.18 2.58 0 .498.07.792.274 1.2.427.884 1.22 1.412 3.708 2.49 4.582 1.97 6.542 3.27 7.76 5.12 1.36 2.062 1.666 5.354.742 7.802-1.016 2.662-3.535 4.47-7.08 5.07-1.097.193-3.698.163-4.876-.05-2.57-.457-5.008-1.727-6.512-3.393-.59-.65-1.737-2.347-1.666-2.47.03-.04.295-.203.59-.376l2.377-1.37 1.84-1.067.386.57c.538.823 1.717 1.95 2.428 2.326 2.042 1.077 4.846.924 6.227-.315.59-.538.833-1.097.833-1.92 0-.742-.09-1.067-.477-1.625-.498-.71-1.514-1.31-4.4-2.56-3.302-1.422-4.724-2.306-6.024-3.708-.752-.813-1.463-2.113-1.758-3.2-.244-.904-.305-3.17-.112-4.084.68-3.2 3.088-5.415 6.563-6.075 1.128-.213 3.75-.132 4.856.142zM36.552 32.12l.02 2.62h-8.33v23.67H22.35v-23.67h-8.33v-2.57l.07-2.64c.03-.04 5.1-.06 11.246-.05l11.185.03z';\r\n\r\nexports.definition = {\r\n  prefix: prefix,\r\n  iconName: iconName,\r\n  icon: [\r\n    width,\r\n    height,\r\n    ligatures,\r\n    unicode,\r\n    svgPathData\r\n  ]\r\n};\r\n\r\nexports.faTypescript = exports.definition;\r\nexports.prefix = prefix;\r\nexports.iconName = iconName;\r\nexports.width = width;\r\nexports.height = height;\r\nexports.ligatures = ligatures;\r\nexports.unicode = unicode;\r\nexports.svgPathData = svgPathData;","import React from 'react';\nimport './App.css';\nimport { faGithub, faFacebook, faFreeCodeCamp, faLinkedin, faCss3, faJsSquare, faReact, faHtml5, faBootstrap, faPython, faMarkdown, faCodepen, faGit, faGitter, faTrello } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTypescript } from './faTypescript';\n\nconst App = () => {\n  const [colours, setColours] = React.useState([])\n  const [selected, setSelected] = React.useState(1)\n\n  const handleDefault = () => {\n    setColours([]);\n    setSelected(1)\n  }\n  const handlePro = () => {\n    setColours([\"#FFF\"]);\n    setSelected(2);\n  }\n  const handleRetro = () => {\n    setColours([\"#FC600A\", \"#FCCC1A\", \"#B2D732\", \"#347C98\", \"#4424D6\", \"#C21460\"]);\n    setSelected(3);\n  }\n  return (\n    <div className=\"App\">\n      <Nav handleDefault={handleDefault} handlePro={handlePro} handleRetro={handleRetro} selected={selected} />\n      <About colours={colours} />\n      <ProjectDeck />\n      <Contact />\n    </div >\n  );\n}\n\n//------------------------------------------------------\n// NAVBAR\n//------------------------------------------------------\n\nconst Nav = (props) => {\n  const [isToggled, setIsToggled] = React.useState(false);\n\n  const toggleNav = () => setIsToggled(!isToggled);\n  return (\n    <div className=\"pos-f-t fixed-top\">\n      <div className={\"collapse \" + (isToggled ? 'show' : '')} id=\"navbarToggleExternalContent\">\n        <div className=\"bg-dark p-4\">\n          <a className=\"nav-link h3 text-success\" href=\"#about\" onClick={toggleNav}>About</a>\n          <a className=\"nav-link h3 text-success\" href=\"#projects\" onClick={toggleNav}>Projects</a>\n          <a className=\"nav-link h3 text-success\" href=\"#contact\" onClick={toggleNav}>Contact</a>\n        </div>\n      </div>\n      <nav className=\"navbar navbar-dark justify-content-space-between bg-dark\">\n        <div className=\"btn-group\">\n          <button type=\"button\" id=\"btn-default\" className={\"btn btn-secondary\" + (props.selected === 1 ? \" active\" : \"\")} onClick={props.handleDefault}>Default</button>\n          <button type=\"button\" id=\"btn-pro\" className={\"btn btn-secondary\" + (props.selected === 2 ? \" active\" : \"\")} onClick={props.handlePro}>Professional</button>\n          <button type=\"button\" id=\"btn-retro\" className={\"btn btn-secondary\" + (props.selected === 3 ? \" active\" : \"\")} onClick={props.handleRetro}>Retro</button>\n        </div>\n        <button className=\"navbar-toggler\" type=\"button\" onClick={toggleNav} aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n      </nav>\n    </div>\n  )\n}\n\n//-----------------------------------------\n// ABOUT SECTION\n//-----------------------------------------\n\nconst About = (props) => {\n  // Get all icons\n  // const icons = [\"BootStrap\", \"JavaScript\", \"CSS\", \"TypeScript\", \"CodePen\", \"Git\", \"HTML\", \"MarkDown\", \"React\", \"Python\", \"Trello\", \"Gitter\"];\n\n  // React.useEffect(() => {\n  //   for (let i in icons) {\n  //     let ele = document.getElementById(icons[i])\n  //     console.log(i)\n  //     let top = Math.sin(Math.random() * Math.PI) * i * 80;\n  //     let left = Math.cos(Math.random() * Math.PI) * i * 80;\n  //     ele.style.top = `${top}px`;\n  //     ele.style.left = `${left}px`;\n  //   }\n  // });\n  return (\n    <div id=\"about\">\n      <header className=\"App-header\">\n        <Canvas colours={props.colours} />\n        <div id=\"name\">Shaun Hamilton</div>\n        <div className=\"container-fluid row justify-content-center border-primary\">\n          <div id=\"JavaScript\" className=\"svg-holder\"><FontAwesomeIcon className=\"svg Js\" icon={faJsSquare} /></div>\n          <div id=\"React\" className=\"svg-holder\"><FontAwesomeIcon className=\"svg React\" icon={faReact} /></div>\n          <div id=\"Python\" className=\"svg-holder\"><FontAwesomeIcon className=\"svg Py\" icon={faPython} /></div>\n          <div id=\"BootStrap\" className=\"svg-holder\"><FontAwesomeIcon className=\"svg Boot\" icon={faBootstrap} /></div>\n          <div id=\"CSS\" className=\"svg-holder\"><FontAwesomeIcon className=\"svg Css\" icon={faCss3} /></div>\n          <div id=\"TypeScript\" className=\"svg-holder\"><FontAwesomeIcon className=\"svg Ts\" icon={faTypescript} /></div>\n          <div id=\"CodePen\" className=\"svg-holder\"><FontAwesomeIcon className=\"svg Codepen\" icon={faCodepen} /></div>\n          <div id=\"Git\" className=\"svg-holder\"><FontAwesomeIcon className=\"svg Git\" icon={faGit} /></div>\n          <div id=\"HTML\" className=\"svg-holder\"><FontAwesomeIcon className=\"svg Html\" icon={faHtml5} /></div>\n          <div id=\"MarkDown\" className=\"svg-holder\"><FontAwesomeIcon className=\"svg Md\" icon={faMarkdown} /></div>\n          <div id=\"Trello\" className=\"svg-holder\"><FontAwesomeIcon className=\"svg Trello\" icon={faTrello} /></div>\n          <div id=\"Gitter\" className=\"svg-holder\"><FontAwesomeIcon className=\"svg Gitter\" icon={faGitter} /></div>\n        </div>\n        <p>\n          Mechanical Engineering Student, Student Ambassador, and freeCodeCamp Moderator\n        </p>\n      </header>\n    </div>\n  )\n}\n\n//-----------------------------------------\n// PROJECT SECTION\n//-----------------------------------------\n\nconst ProjectDeck = () => {\n  return (\n    <div className=\"card-deck\" id=\"projects\">\n      <ProjectCard href={\"https://codepen.io/sky020/full/XWmbpzL\"} img={\"https://codepen.io/sky020/pen/XWmbpzL/image/large.png\"} title={\"MarDown Previewer\"} />\n      <ProjectCard href={\"https://codepen.io/sky020/full/xxGjWGJ\"} img={\"https://codepen.io/sky020/pen/xxGjWGJ/image/large.png\"} title={\"Random Quote Generator\"} />\n      <ProjectCard href={\"https://codepen.io/sky020/full/ExVKBJd\"} img={\"https://codepen.io/sky020/pen/ExVKBJd/image/large.png\"} title={\"D3 Bar Chart\"} />\n    </div>\n  )\n}\n\nconst ProjectCard = (props) => {\n  const [isHovered, setIsHovered] = React.useState(false);\n\n  const handleHover = () => {\n    setIsHovered(true);\n  }\n  const handleUnhover = () => {\n    setIsHovered(false);\n  }\n  return (\n    <div className={\"card shadow m-sm-4\" + (isHovered ? \" hovered-img\" : \"\")} onMouseEnter={handleHover} onMouseLeave={handleUnhover}>\n      <img className={\"card-img-top\"} src={props.img} alt=\"Card image cap\"></img>\n      <div className={\"card-body\"}>\n        <h4 className=\"card-title\">{props.title}</h4>\n        <p className=\"card-text\">\n          Some quick example text to build on the card title\n          and make up the bulk of the card's content.\n          </p>\n        <a href={props.href} className=\"btn btn-primary\">View on CodePen</a>\n      </div>\n    </div>\n  )\n}\n\n//--------------------------------------------\n// CONTACT SECTION\n//--------------------------------------------\n\nconst Contact = () => {\n  return (\n    <div className=\"container-fluid\" id=\"contact\">\n      <div className=\"col\">\n        <div className=\"row-lg\"><a href=\"https://www.github.com/sky020\" className=\"icon-btn\"><div className=\"holder\"><FontAwesomeIcon icon={faGithub} className=\"icon GH\" /> GitHub</div></a></div>\n        <div className=\"row-lg\"><a href=\"https://www.freecodecamp.org/sky020\" className=\"icon-btn\"><div className=\"holder\"><FontAwesomeIcon icon={faFreeCodeCamp} className=\"icon fCC\" /> freeCodeCamp</div></a></div>\n        <div className=\"row-lg\"><a href=\"https://www.linkedin.com/in/shaun-hamilton-411636114\" className=\"icon-btn\"><div className=\"holder\"><FontAwesomeIcon icon={faLinkedin} className=\"icon Li\" /> LinkedIn</div></a></div>\n        <div className=\"row-lg\"><a href=\"https://www.facebook.com/shaun.s.hamilton\" className=\"icon-btn\"><div className=\"holder\"><FontAwesomeIcon icon={faFacebook} className=\"icon FB\" /> Facebook</div></a></div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n\n//-----------------------\n//Canvas\n//-----------------------\nconst Canvas = (props) => {\n  const [colours, setColours] = React.useState([]);\n  function loaded() {\n    let canvas = document.getElementById('canvas'),\n      ctx = canvas.getContext('2d'),\n      width = canvas.width = window.innerWidth,\n      height = canvas.height = window.innerHeight,\n      particles = [],\n      particleNum = 50;\n    ctx.clearRect(0, 0, width, height);\n    window.onresize = () => {\n      width = canvas.width = window.innerWidth;\n      height = canvas.height = window.innerHeight;\n    }\n    function randomIntFromRange(min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min)\n    }\n    function randomColour(colours) {\n      return colours[Math.floor(Math.random() * colours.length)]\n    }\n    if (colours.length > 0) {\n      for (let i = 0; i < particleNum; i++) {\n        particles.push(new Particle(\n          canvas,\n          canvas.width / 2,\n          canvas.height / 2,\n          Math.random() * 8 + 2,\n          Math.random() * Math.PI * 2,\n          randomIntFromRange(1, 4),\n          randomColour(colours),\n        ));\n      }\n    }\n\n    function draw() {\n      for (let i = 0; i < particleNum; i++) {\n        let p = particles[i];\n        p.update();\n        ctx.save();\n        ctx.beginPath();\n        ctx.arc(p.position.x, p.position.y, p.radius, 0, Math.PI * 2)\n        ctx.shadowColor = p.colour;\n        ctx.shadowBlur = 5;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n        ctx.globalAlpha = '1';\n        ctx.fillStyle = p.colour;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n    if (colours.length > 0) {\n      render();\n    }\n\n    function render() {\n      ctx.fillStyle = 'hsla(260,40%,5%,0.2)';\n      ctx.fillRect(0, 0, width, height);\n      draw();\n      requestAnimationFrame(render);\n    }\n  }\n\n  React.useEffect(() => {\n    setColours(props.colours);\n    colours.length > 0 && loaded()\n  })\n  return (\n    <div id=\"easle\" className=\"background\">\n      {colours.length > 0 && <canvas id=\"canvas\" className=\"canvas\"></canvas>}\n    </div>\n  )\n}\n\nclass Vector2D {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n  add(v) {\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  }\n  sub(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  }\n  mult(v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  }\n  magnitude() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  setFromScalarAngle(scalar, angle) {\n    this.x = Math.cos(angle) * scalar;\n    this.y = Math.sin(angle) * scalar;\n  }\n}\nclass Particle {\n  constructor(canvas, x, y, scalar, direction, radius, colour) {\n    this.canvas = canvas;\n    this.position = new Vector2D(x, y);\n    this.velocity = new Vector2D();\n    this.velocity.setFromScalarAngle(scalar, direction);\n    this.radius = radius;\n    this.colour = colour;\n    this.range = 100;\n  }\n  update() {\n    this.position.add(this.velocity);\n    if (this.position.x - this.range > this.canvas.width) {\n      this.position.x = this.canvas.width / 2;\n      this.position.y = this.canvas.height / 2;\n    };\n    if (this.position.x + this.range < 0) {\n      this.position.x = this.canvas.width / 2;\n      this.position.y = this.canvas.height / 2;\n    };\n    if (this.position.y - this.range > this.canvas.height) {\n      this.position.x = this.canvas.width / 2;\n      this.position.y = this.canvas.height / 2;\n    };\n    if (this.position.y + this.range < 0) {\n      this.position.x = this.canvas.width / 2;\n      this.position.y = this.canvas.height / 2;\n    };\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}