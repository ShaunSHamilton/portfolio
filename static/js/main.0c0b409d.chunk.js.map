{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","React","useState","isToggled","setIsToggled","className","id","href","type","onClick","aria-expanded","aria-label","ProjectDeck","src","title","ProjectCard","props","isHovered","setIsHovered","onMouseEnter","console","log","onMouseLeave","alt","App","logo","Vector2","x","y","this","v","Math","sqrt","scalar","angle","cos","sin","Particle","canvas","direction","radius","color","position","velocity","setFromScalarAngle","range","add","width","height","window","onload","min","max","document","getElementById","ctx","getContext","innerWidth","innerHeight","particles","colors","randomColor","floor","random","length","onresize","i","push","PI","render","fillStyle","fillRect","p","update","save","beginPath","arc","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","globalAlpha","fill","restore","draw","requestAnimationFrame","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0c0b409d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <header className=\"App-header\">\n        <canvas id=\"canvas\" className=\"canvas\"></canvas>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Portfolio in Progress...\n        </p>\n      </header>\n      <ProjectDeck />\n    </div >\n  );\n}\n\nconst Nav = () => {\n  const [isToggled, setIsToggled] = React.useState(false);\n  const toggleNav = () => setIsToggled(!isToggled);\n  return (\n    <div className=\"pos-f-t fixed-top\">\n      <div className={\"collapse \" + (isToggled ? 'show' : '')} id=\"navbarToggleExternalContent\">\n        <div className=\"bg-dark p-4\">\n          <a className=\"nav-link h3 text-success\" href=\"#\">About</a>\n          <a className=\"nav-link h3 text-success\" href=\"#\">Projects</a>\n          <a className=\"nav-link h3 text-success\" href=\"#\">Contact</a>\n        </div>\n      </div>\n      <nav className=\"navbar navbar-dark justify-content-end bg-dark\">\n        <button className=\"navbar-toggler\" type=\"button\" onClick={toggleNav} aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n      </nav>\n    </div>\n  )\n}\n\nconst ProjectDeck = () => {\n  return (\n    <div className=\"card-deck\">\n      <ProjectCard src={\"https://codepen.io/sky020/pen/XWmbpzL/image/large.png\"} title={\"MarDown Previewer\"} />\n      <ProjectCard src={\"https://codepen.io/sky020/pen/xxGjWGJ/image/large.png\"} title={\"Random Quote Generator\"} />\n      <ProjectCard />\n    </div>\n  )\n}\n\nconst ProjectCard = (props) => {\n  const [isHovered, setIsHovered] = React.useState(false);\n\n  const handleHover = () => {\n    setIsHovered(true);\n    console.log(isHovered)\n  }\n  const handleUnhover = () => {\n    setIsHovered(false);\n  }\n  return (\n    <div className=\"card shadow m-sm-4\" onMouseEnter={handleHover} onMouseLeave={handleUnhover}>\n      <img className={\"card-img\" + (isHovered ? \"\" : \"-top\")} src={props.src} alt=\"Card image cap\"></img>\n      <div className={\"card\" + (isHovered ? \" d-none\" : \"-body\")}>\n        <h4 className=\"card-title\">{props.title}</h4>\n        <p className=\"card-text\">\n          Some quick example text to build on the card title\n          and make up the bulk of the card's content.\n          </p>\n        <a href=\"https://codepen.io/sky020/full/xxGjWGJ\" className=\"btn btn-primary\">View on CodePen</a>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n\n//-----------------------\n//Canvas\n//-----------------------\nclass Vector2 {\n  /**\n   * コンストラクター\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n  clone() {\n    return new Vector2(this.x, this.y);\n  }\n  add(v) {\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  }\n  sub(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  }\n  mult(v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  }\n  magnitude() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  setFromScalarAngle(scalar, angle) {\n    this.x = Math.cos(angle) * scalar;\n    this.y = Math.sin(angle) * scalar;\n  }\n}\nclass Particle {\n  /**\n   * @param {canvas} canvas\n   * @param {number} x\n   * @param {number} y\n   * @param {number} scalar\n   * @param {number} direction\n   * @param {number} radius\n   * @param {string} color\n   */\n  constructor(canvas, x, y, scalar, direction, radius, color) {\n    this.canvas = canvas;\n    this.position = new Vector2(x, y);\n    this.velocity = new Vector2();\n    this.velocity.setFromScalarAngle(scalar, direction);\n    this.radius = radius;\n    this.color = color;\n    this.range = 100;\n  }\n  update() {\n    this.position.add(this.velocity);\n    if (this.position.x - this.range > this.canvas.width) {\n      this.position.x = this.canvas.width / 2;\n      this.position.y = this.canvas.height / 2;\n    };\n    if (this.position.x + this.range < 0) {\n      this.position.x = this.canvas.width / 2;\n      this.position.y = this.canvas.height / 2;\n    };\n    if (this.position.y - this.range > this.canvas.height) {\n      this.position.x = this.canvas.width / 2;\n      this.position.y = this.canvas.height / 2;\n    };\n    if (this.position.y + this.range < 0) {\n      this.position.x = this.canvas.width / 2;\n      this.position.y = this.canvas.height / 2;\n    };\n  }\n}\n\nwindow.onload = function () {\n  var canvas = document.getElementById('canvas'),\n    ctx = canvas.getContext('2d'),\n    width = canvas.width = window.innerWidth,\n    height = canvas.height = window.innerHeight,\n    particles = [],\n    particleNum = 80,\n    colors = [\"#0952BD\", \"#A5BFF0\", \"#118CD6\", \"#1AAEE8\", \"#F2E8C9\"];\n\n  window.onresize = () => {\n    width = canvas.width = window.innerWidth;\n    height = canvas.height = window.innerHeight;\n  }\n  function randomIntFromRange(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n  function randomColor(colors) {\n    return colors[Math.floor(Math.random() * colors.length)]\n  }\n  for (let i = 0; i < particleNum; i++) {\n    particles.push(new Particle(\n      canvas,\n      canvas.width / 2,\n      canvas.height / 2,\n      Math.random() * 8 + 2,\n      Math.random() * Math.PI * 2,\n      randomIntFromRange(5, 7),\n      randomColor(colors),\n    ));\n  }\n\n  function draw() {\n    for (let i = 0; i < particleNum; i++) {\n      var p = particles[i];\n      p.update();\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(p.position.x, p.position.y, p.radius, 0, Math.PI * 2)\n      ctx.shadowColor = p.color;\n      ctx.shadowBlur = 5;\n      ctx.shadowOffsetX = 0;\n      ctx.shadowOffsetY = 0;\n      ctx.globalAlpha = '1'\n      ctx.fillStyle = p.color;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  render();\n\n  function render() {\n    ctx.fillStyle = 'hsla(260,40%,5%,.2)';\n    ctx.fillRect(0, 0, width, height);\n    draw();\n    requestAnimationFrame(render);\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}